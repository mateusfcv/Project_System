// <auto-generated />
using System;
using Mateus.SistemaAcademico.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mateus.SistemaAcademico.Migrations
{
    [DbContext(typeof(SistemaContext))]
    [Migration("20190820202355_Primeira")]
    partial class Primeira
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mateus.SistemaAcademico.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidades");

                    b.Property<string>("Complemento");

                    b.Property<string>("Estados");

                    b.Property<string>("NomeRua");

                    b.Property<int>("Numero");

                    b.Property<int?>("ProfessorId");

                    b.Property<int?>("ResponsavelId");

                    b.Property<int?>("SecretariaId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<int>("CursoId");

                    b.Property<DateTime>("DataDeNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<int>("RegistroDoAluno");

                    b.Property<int>("ResponsavelId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAvaliacao");

                    b.Property<float>("NotaAvaliacao");

                    b.Property<int>("TipoAvaliacao");

                    b.HasKey("Id");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("DisciplinaId");

                    b.Property<int>("TipoConteudos");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordenadorId");

                    b.Property<DateTime>("DataDeFim");

                    b.Property<DateTime>("DataDeInicio");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("TipoCurso");

                    b.HasKey("Id");

                    b.HasIndex("CoordenadorId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CargaHoraria");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Frequencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId");

                    b.Property<DateTime>("Data");

                    b.Property<int>("DisciplinaId");

                    b.Property<int>("TipoFrequencia");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Frequencias");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.CursoDisciplina", b =>
                {
                    b.Property<int>("CursoId");

                    b.Property<int>("DisciplinaId");

                    b.HasKey("CursoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("CursoDisciplina");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.ProfessorCurso", b =>
                {
                    b.Property<int>("ProfessorId");

                    b.Property<int>("CurosId");

                    b.Property<int?>("CursoId");

                    b.HasKey("ProfessorId", "CurosId");

                    b.HasIndex("CursoId");

                    b.ToTable("ProfessorCurso");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.ProfessorDisciplina", b =>
                {
                    b.Property<int>("ProfessorId");

                    b.Property<int>("DisciplinaId");

                    b.HasKey("ProfessorId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("ProfessorDisciplina");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Notas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<int>("AlunosId");

                    b.Property<float>("Avaliacao");

                    b.Property<int?>("DisciplinaId");

                    b.Property<int>("DisciplinasId");

                    b.Property<float>("Trabalho");

                    b.Property<int?>("TurmaId");

                    b.Property<int>("TurmasId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataDeNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<int>("RegistroDoProfessor");

                    b.Property<string>("Titulacao")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataDeNascimento");

                    b.Property<string>("Email");

                    b.Property<int>("Escolaridade");

                    b.Property<int>("EstadoCivil");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Secretaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataDeNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Secretarias");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<int>("Numero");

                    b.Property<int?>("ProfessorId");

                    b.Property<int?>("ResponsavelId");

                    b.Property<int?>("SecretariaId");

                    b.Property<int>("TipoTelefone");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Trabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDaEntrega");

                    b.Property<DateTime>("DataDeInicio");

                    b.Property<float>("NotaDoTrabalho");

                    b.HasKey("Id");

                    b.ToTable("Trabalhos");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<int>("AlunosId");

                    b.Property<int>("Ano");

                    b.Property<int?>("DisciplinaId");

                    b.Property<int>("DisciplinasId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Endereco", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Aluno")
                        .WithMany("Enderecos")
                        .HasForeignKey("AlunoId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Professor")
                        .WithMany("Enderecos")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Responsavel")
                        .WithMany("Enderecos")
                        .HasForeignKey("ResponsavelId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Secretaria")
                        .WithMany("Enderecos")
                        .HasForeignKey("SecretariaId");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Aluno", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mateus.SistemaAcademico.Models.Responsavel", "Responsaveis")
                        .WithMany("Alunos")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Conteudo", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina")
                        .WithMany("Conteudo")
                        .HasForeignKey("DisciplinaId");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Curso", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Professor", "Coordenador")
                        .WithMany()
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Frequencia", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.CursoDisciplina", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Curso", "Curso")
                        .WithMany("Disciplina")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina", "Disciplina")
                        .WithMany("Curso")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.ProfessorCurso", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Curso", "Curso")
                        .WithMany("Professor")
                        .HasForeignKey("CursoId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Professor", "Professor")
                        .WithMany("Curso")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Joins.ProfessorDisciplina", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina", "Disciplina")
                        .WithMany("Professors")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mateus.SistemaAcademico.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Notas", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Aluno", "Aluno")
                        .WithMany("Notas")
                        .HasForeignKey("AlunoId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina", "Disciplina")
                        .WithMany("Notas")
                        .HasForeignKey("DisciplinaId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Turma", "Turma")
                        .WithMany("Notas")
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Telefone", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Aluno")
                        .WithMany("Telefones")
                        .HasForeignKey("AlunoId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Professor")
                        .WithMany("Telefones")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Responsavel")
                        .WithMany("Telefones")
                        .HasForeignKey("ResponsavelId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Secretaria")
                        .WithMany("Telefones")
                        .HasForeignKey("SecretariaId");
                });

            modelBuilder.Entity("Mateus.SistemaAcademico.Models.Turma", b =>
                {
                    b.HasOne("Mateus.SistemaAcademico.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId");

                    b.HasOne("Mateus.SistemaAcademico.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId");
                });
#pragma warning restore 612, 618
        }
    }
}
